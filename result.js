!function(global,factory){if("function"==typeof define&&define.amd)define([],factory);else if("undefined"!=typeof exports)factory();else{factory(),global.result={}}}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:this,(function(){"use strict";const Result=function Result(result){if(this instanceof Result!=1)return result instanceof Result==1?result:new Result(result);void 0!==result?Object.defineProperty(this,"$resultData",{value:(new WeakMap).set(this,Object.freeze({result:result})),configurable:!1,enumerable:!1,writable:!1}):Object.defineProperty(this,"$resultData",{value:(new WeakMap).set(this,{}),configurable:!1,enumerable:!1,writable:!1})};Object.defineProperty(Result,"namespace",{value:"Result",configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(Result,"type",{value:Object.freeze(["class","object","result"]),configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(Result,"checkResult",{value:function(entity){return"object"==typeof entity&&(entity instanceof Result==1||"string"==typeof entity.constructor.namespace&&entity.constructor.namespace.length>0&&entity.constructor.namespace===Result.namespace||"object"==typeof entity.$type&&null!==entity.$type&&!0===Array.isArray(entity.$type)&&!0===Result.type.every(type=>entity.$type.includes(type)))},configurable:!1,enumerable:!1,writable:!1}),Result.prototype.setResult=function(result){if(void 0!==this.getScope().result)throw new Error(["#set-result-done;","cannot set result","set result done","@result: "+this.getScope().result]);if(void 0===result)throw new Error(["#invalid-set-result","cannot set result","invalid result","@result: "+result]);return this.setScope(Object.freeze({result:result})),this},Result.prototype.getResult=function(){return this.getScope().result},Result.prototype.checkResult=function(){return void 0!==this.getResult()},Result.prototype.setScope=function(scopeData){if("object"!=typeof scopeData||null===scopeData)throw new Error(["#invalid-set-result-scope-data;","cannot set result scope data","invalid scope data","@scope-data: "+scopeData]);return this.$resultData.set(this,scopeData),this},Result.prototype.getScope=function(){return this.$resultData.get(this)},Result.prototype.valueOf=function(){return Object.freeze(Object.assign({},this.getScope()))},Result.prototype.toString=function(){if("function"==typeof require){const util=require("util");if("function"==typeof util.inspect)return util.inspect(this.getScope())}return JSON.stringify(this.getScope())},module.exports=Result}));